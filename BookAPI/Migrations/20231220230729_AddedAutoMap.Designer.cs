// <auto-generated />
using System;
using BookAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231220230729_AddedAutoMap")]
    partial class AddedAutoMap
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookAPI.Data.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WhenTake")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WhenTakeLast")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasAlternateKey("ISBN");

                    b.ToTable("Libary_Archive", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Jeffrey Richter",
                            Description = "The book about C# and .NET",
                            Genre = "Educational",
                            ISBN = "4-7650-21",
                            Title = "CLR via C#"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Lafore Robert",
                            Description = "The book about C++, STL and basic algorithms",
                            Genre = "Educational",
                            ISBN = "4-5421-61",
                            Title = "C++ Programming"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
